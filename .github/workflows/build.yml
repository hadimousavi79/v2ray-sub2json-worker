name: Build and Release ZIP

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for version comparison

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.0'  # Explicitly use a compatible version
          cache: 'npm'

      # Clean and install dependencies
      - name: Clean and Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      # Get previous and current versions
      - name: Get package.json versions
        id: version-check
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          echo "Current version: $CURRENT_VERSION"
          PREVIOUS_VERSION=$(git show HEAD^:package.json | jq -r .version || echo "none")
          echo "Previous version: $PREVIOUS_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ] && echo "version_changed=true" >> $GITHUB_OUTPUT || echo "version_changed=false" >> $GITHUB_OUTPUT

      # Build and create ZIP if version changed
      - name: Build and ZIP
        if: steps.version-check.outputs.version_changed == 'true'
        run: npm run zip

      # Create GitHub Release with ZIP
      - name: Create Release
        if: steps.version-check.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current_version }}
          release_name: Release v${{ steps.version-check.outputs.current_version }}
          body: |
            Automated release for v${{ steps.version-check.outputs.current_version }}.
            - Built with SvelteKit and deployed to Cloudflare Pages.
            - Download the ZIP below to deploy manually.
          draft: false
          prerelease: ${{ startsWith(steps.version-check.outputs.current_version, '0.') }}
          assets: v2ray-sub2json-worker-v${{ steps.version-check.outputs.current_version }}.zip